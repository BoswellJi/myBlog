import{_ as e,c as i,e as a,o as t}from"./app-XEG1kVcG.js";const m={};function n(o,l){return t(),i("div",null,l[0]||(l[0]=[a('<h2 id="概述" tabindex="-1"><a class="header-anchor" href="#概述"><span>概述</span></a></h2><ul><li>离散数据最重要的用途之一就是绘制表面；</li><li>当绘制对象的表面时，不管是多边形表面还是曲面表面，经过绘制流水线的处理后最终都要变成一组片元，每个片元对应于帧缓存中的一个像素；</li><li>作为光栅处理过程的一部分，我们必须通过计算得到每个片元的<code>亮度值</code>和<code>颜色值</code>；</li><li>通过顶点颜色在多边形表面的插值计算得到对象表面其他所有像素的颜色；</li></ul><h2 id="类型" tabindex="-1"><a class="header-anchor" href="#类型"><span>类型</span></a></h2><ul><li><p>纹理映射</p><ul><li>使用一图案或纹理确定片元的颜色；</li></ul></li><li><p>凹凸映射</p></li><li><p>环境映射</p></li></ul>',4)]))}const c=e(m,[["render",n],["__file","7.3映射方法.html.vue"]]),r=JSON.parse('{"path":"/books/%E5%9B%BE%E5%BD%A2%E5%AD%A6/webgl/%E4%BA%A4%E4%BA%92%E5%BC%8F%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6-%E5%9F%BA%E4%BA%8Ewebgl%E7%9A%84%E8%87%AA%E9%A1%B6%E5%90%91%E4%B8%8B%E6%96%B9%E6%B3%95/7%E7%A6%BB%E6%95%A3%E6%8A%80%E6%9C%AF/7.3%E6%98%A0%E5%B0%84%E6%96%B9%E6%B3%95.html","title":"","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"概述","slug":"概述","link":"#概述","children":[]},{"level":2,"title":"类型","slug":"类型","link":"#类型","children":[]}],"git":{"updatedTime":1735558340000,"contributors":[{"name":"jmz","username":"jmz","email":"mingzhuang.ji@ly.com","commits":6,"url":"https://github.com/jmz"},{"name":"Boswell","username":"Boswell","email":"mingzhuang.ji@ly.com","commits":2,"url":"https://github.com/Boswell"},{"name":"Boswell","username":"Boswell","email":"aiyoudqrjmz@163.com","commits":2,"url":"https://github.com/Boswell"},{"name":"mingzhuang.ji","username":"mingzhuang.ji","email":"mingzhuang.ji@ly.com","commits":2,"url":"https://github.com/mingzhuang.ji"}]},"filePathRelative":"books/图形学/webgl/交互式计算机图形学-基于webgl的自顶向下方法/7离散技术/7.3映射方法.md"}');export{c as comp,r as data};
