import{_ as a,c as l,e as s,o as i}from"./app-XEG1kVcG.js";const n={};function t(c,e){return i(),l("div",null,e[0]||(e[0]=[s(`<h2 id="直接量字符" tabindex="-1"><a class="header-anchor" href="#直接量字符"><span>直接量字符</span></a></h2><h2 id="字符类" tabindex="-1"><a class="header-anchor" href="#字符类"><span>字符类</span></a></h2><h2 id="重复" tabindex="-1"><a class="header-anchor" href="#重复"><span>重复</span></a></h2><ul><li>非贪婪的重复</li></ul><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">注意：?号是放在重复模式字符后面的</span>
<span class="line">/a+/.exec(&#39;aaa&#39;) =&gt; [&#39;aaa&#39;]</span>
<span class="line"></span>
<span class="line">/a+?/.exec(&#39;aaa&#39;) =&gt; [&#39;a&#39;]</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="选择-分组-和引用" tabindex="-1"><a class="header-anchor" href="#选择-分组-和引用"><span>选择，分组，和引用</span></a></h2><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">指定选择项</span>
<span class="line"></span>
<span class="line">/a|ac/</span>
<span class="line"></span>
<span class="line">子表达式分组</span>
<span class="line">/(ab)(bc)/</span>
<span class="line"></span>
<span class="line">引用前一子表达式, \\1表达：第一个分组匹配到的文本内容</span>
<span class="line">/(a)bc\\1/ &#39;abca&#39;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="指定匹配位置" tabindex="-1"><a class="header-anchor" href="#指定匹配位置"><span>指定匹配位置</span></a></h2><ul><li><p><code>^</code>:</p></li><li><p><code>$</code>:</p></li><li><p><code>\\b</code>: 一个单词边界</p></li><li><p><code>\\B</code>: 一个非单词边界</p></li><li><p><code>(?=p)</code>: 零宽正向先行断言，要求接下来的字符都与p匹配</p></li><li><p><code>(?!p)</code>: 零宽负向先行断言,要求接下来的字符与p不匹配</p></li></ul><h2 id="修饰符" tabindex="-1"><a class="header-anchor" href="#修饰符"><span>修饰符</span></a></h2><ul><li><p>i</p></li><li><p>g</p></li><li><p>m: 多行</p></li></ul>`,11)]))}const r=a(n,[["render",t],["__file","10.1正则表达式的定义.html.vue"]]),p=JSON.parse('{"path":"/books/javascript/javascript%E6%9D%83%E5%A8%81%E6%8C%87%E5%8D%97/10%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E7%9A%84%E6%A8%A1%E5%BC%8F%E5%8C%B9%E9%85%8D/10.1%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E7%9A%84%E5%AE%9A%E4%B9%89.html","title":"","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"直接量字符","slug":"直接量字符","link":"#直接量字符","children":[]},{"level":2,"title":"字符类","slug":"字符类","link":"#字符类","children":[]},{"level":2,"title":"重复","slug":"重复","link":"#重复","children":[]},{"level":2,"title":"选择，分组，和引用","slug":"选择-分组-和引用","link":"#选择-分组-和引用","children":[]},{"level":2,"title":"指定匹配位置","slug":"指定匹配位置","link":"#指定匹配位置","children":[]},{"level":2,"title":"修饰符","slug":"修饰符","link":"#修饰符","children":[]}],"git":{"updatedTime":1735558340000,"contributors":[{"name":"jmz","username":"jmz","email":"aiyoudqrjmz@163.com","commits":4,"url":"https://github.com/jmz"},{"name":"jmz","username":"jmz","email":"mingzhuang.ji@ly.com","commits":2,"url":"https://github.com/jmz"},{"name":"Boswell","username":"Boswell","email":"mingzhuang.ji@ly.com","commits":2,"url":"https://github.com/Boswell"},{"name":"Boswell","username":"Boswell","email":"aiyoudqrjmz@163.com","commits":2,"url":"https://github.com/Boswell"},{"name":"mingzhuang.ji","username":"mingzhuang.ji","email":"mingzhuang.ji@ly.com","commits":2,"url":"https://github.com/mingzhuang.ji"}]},"filePathRelative":"books/javascript/javascript权威指南/10正则表达式的模式匹配/10.1正则表达式的定义.md"}');export{r as comp,p as data};
