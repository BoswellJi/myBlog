import{_ as e,c as i,e as a,o as n}from"./app-XEG1kVcG.js";const s={};function c(h,l){return n(),i("div",null,l[0]||(l[0]=[a('<h2 id="概述" tabindex="-1"><a class="header-anchor" href="#概述"><span>概述</span></a></h2><ul><li>算法是问题的程序化解决方案;</li><li>解决方案本身并不是答案，而是获取答案的精确指令；</li><li>算法设计分析过程： <ol><li>理解问题</li><li>确定下面内容：计算方法，精确或近似解法，算法设计技术</li><li>设计算法</li><li>正确性证明</li><li>分析算法</li><li>根据算法写代码</li></ol></li></ul><h2 id="理解问题" tabindex="-1"><a class="header-anchor" href="#理解问题"><span>理解问题</span></a></h2><ul><li>对问题有完全的理解，仔细阅读问题描述，考虑特殊情况<code>边界值</code>；</li><li>算法的输入，确定了该算法所解决问题的一个实例；</li></ul><h2 id="了解计算机设备的性能" tabindex="-1"><a class="header-anchor" href="#了解计算机设备的性能"><span>了解计算机设备的性能</span></a></h2><ul><li>计算机体系结构<code>冯.诺依曼</code>；这个体系的根本在于<code>随机存取器RAM</code>；</li><li>并行计算，同一时间执行多条操作；</li><li>认识到计算机的<code>处理速度</code>和<code>存储限制</code>；</li></ul><h2 id="在精确解法和近似解法之间做出选择" tabindex="-1"><a class="header-anchor" href="#在精确解法和近似解法之间做出选择"><span>在精确解法和近似解法之间做出选择</span></a></h2><ul><li>精确算法与近似算法</li></ul><h2 id="算法的设计技术" tabindex="-1"><a class="header-anchor" href="#算法的设计技术"><span>算法的设计技术</span></a></h2><ul><li>也叫：策略，范例，是用<code>算法解题</code>的<code>一般性方法</code>，用于解决<code>不同计算领域</code>的多种问题；</li><li>根据内在设计理念对算法进行分类；</li></ul><h2 id="确定适当的数据结构" tabindex="-1"><a class="header-anchor" href="#确定适当的数据结构"><span>确定适当的数据结构</span></a></h2><ul><li>根据<code>算法执行的操作</code>为算法选择合适的<code>数据结构</code>；</li></ul><h2 id="算法的描述" tabindex="-1"><a class="header-anchor" href="#算法的描述"><span>算法的描述</span></a></h2><ul><li>文字描述算法的步骤以及伪代码描述</li></ul><h2 id="算法的正确性证明" tabindex="-1"><a class="header-anchor" href="#算法的正确性证明"><span>算法的正确性证明</span></a></h2><ul><li>一旦完成对算法的描述，就必须证明它的<code>正确性</code>；</li></ul><h2 id="算法的分析" tabindex="-1"><a class="header-anchor" href="#算法的分析"><span>算法的分析</span></a></h2><ul><li>除了正确性，最重要的特性就是<code>效率</code>了；</li><li>时间效率与空间效率；</li><li>简单性：算法的简单性，使得代码更容易读；</li><li>一般性：解决问题的一般性，接收输入的一般性；</li></ul><h2 id="为算法写代码" tabindex="-1"><a class="header-anchor" href="#为算法写代码"><span>为算法写代码</span></a></h2><ul><li>编译器可以优化算法效率；</li><li>一个好的算法，是不懈努力和反复修正的结果；</li><li>设计算法是一种<code>工程行为</code>，需要在资源有限的情况下，做权衡；</li></ul>',20)]))}const d=e(s,[["render",c],["__file","1.2算法问题求解基础.html.vue"]]),t=JSON.parse('{"path":"/books/%E7%AE%97%E6%B3%95/%E7%AE%97%E6%B3%95%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%88%86%E6%9E%90%E5%9F%BA%E7%A1%80/1%E7%BB%AA%E8%AE%BA/1.2%E7%AE%97%E6%B3%95%E9%97%AE%E9%A2%98%E6%B1%82%E8%A7%A3%E5%9F%BA%E7%A1%80.html","title":"","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"概述","slug":"概述","link":"#概述","children":[]},{"level":2,"title":"理解问题","slug":"理解问题","link":"#理解问题","children":[]},{"level":2,"title":"了解计算机设备的性能","slug":"了解计算机设备的性能","link":"#了解计算机设备的性能","children":[]},{"level":2,"title":"在精确解法和近似解法之间做出选择","slug":"在精确解法和近似解法之间做出选择","link":"#在精确解法和近似解法之间做出选择","children":[]},{"level":2,"title":"算法的设计技术","slug":"算法的设计技术","link":"#算法的设计技术","children":[]},{"level":2,"title":"确定适当的数据结构","slug":"确定适当的数据结构","link":"#确定适当的数据结构","children":[]},{"level":2,"title":"算法的描述","slug":"算法的描述","link":"#算法的描述","children":[]},{"level":2,"title":"算法的正确性证明","slug":"算法的正确性证明","link":"#算法的正确性证明","children":[]},{"level":2,"title":"算法的分析","slug":"算法的分析","link":"#算法的分析","children":[]},{"level":2,"title":"为算法写代码","slug":"为算法写代码","link":"#为算法写代码","children":[]}],"git":{"updatedTime":1735558340000,"contributors":[{"name":"jmz","username":"jmz","email":"mingzhuang.ji@ly.com","commits":4,"url":"https://github.com/jmz"},{"name":"Boswell","username":"Boswell","email":"mingzhuang.ji@ly.com","commits":2,"url":"https://github.com/Boswell"},{"name":"Boswell","username":"Boswell","email":"aiyoudqrjmz@163.com","commits":2,"url":"https://github.com/Boswell"},{"name":"mingzhuang.ji","username":"mingzhuang.ji","email":"mingzhuang.ji@ly.com","commits":2,"url":"https://github.com/mingzhuang.ji"}]},"filePathRelative":"books/算法/算法设计与分析基础/1绪论/1.2算法问题求解基础.md"}');export{d as comp,t as data};
