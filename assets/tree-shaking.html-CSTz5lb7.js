import{_ as l,c as i,e as o,o as c}from"./app-XEG1kVcG.js";const t={};function d(a,e){return c(),i("div",null,e[0]||(e[0]=[o('<ul><li><p>用于移除js上下文中的未引用代码 <code>（dead-code）</code> ;</p></li><li><p>依赖于 <code>es2015模块系统</code> 中的静态结构特性；</p><ul><li>import: 导入；</li><li>export: 导出；</li></ul></li><li><p>兴起于2015年的rollup中；</p></li><li><p>从bundle中移除他们（dead-code) <code>即为压缩输出</code></p><ul><li>启用 <code>uglifyjs</code> 压缩插件；</li><li>这是一个必须的步骤，需要引入压缩工具来删除死代码；</li></ul></li><li><p>模块的副作用</p><ul><li>导入时会执行特殊行为的代码，不仅仅暴露 <code>一个export</code> 或者 <code>多个export</code> , 它影响全局作用域，并且通常 <code>不提共export</code> ;</li><li>有副作用的模块，需要在 <code>package.json</code> 中的 <code>sideEffects</code> 中添加文件路径；或者是 <code>module选项的rules</code> 中；</li></ul></li></ul><h2 id="使用步骤" tabindex="-1"><a class="header-anchor" href="#使用步骤"><span>使用步骤</span></a></h2><ul><li><p>配置 <code>sideEffects</code> ，使得 <code>babel编译</code> 时，不会将使用 <code>import,export</code> 语法的模块，打包未 <code>commonjs</code> 的 <code>require</code> 语法；</p></li><li><p>webpack打包处理，将import, export模块，标识未是否是tree-shaking对象；</p></li><li><p>压缩文件 <code>uglifyjs</code> , 同时进行tree-shaking操作；</p></li></ul>',3)]))}const m=l(t,[["render",d],["__file","tree-shaking.html.vue"]]),n=JSON.parse('{"path":"/webpack/tree-shaking.html","title":"","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"使用步骤","slug":"使用步骤","link":"#使用步骤","children":[]}],"git":{"updatedTime":1718759308000,"contributors":[{"name":"jmz","username":"jmz","email":"mingzhuang.ji@ly.com","commits":2,"url":"https://github.com/jmz"},{"name":"Boswell","username":"Boswell","email":"aiyoudqrjmz@163.com","commits":3,"url":"https://github.com/Boswell"},{"name":"mingzhuang.ji","username":"mingzhuang.ji","email":"mingzhuang.ji@ly.com","commits":2,"url":"https://github.com/mingzhuang.ji"}]},"filePathRelative":"webpack/tree-shaking.md"}');export{m as comp,n as data};
