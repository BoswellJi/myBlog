import{_ as l,c as i,e as a,o as t}from"./app-XEG1kVcG.js";const n={};function r(c,e){return t(),i("div",null,e[0]||(e[0]=[a('<h2 id="fiber-纤维" tabindex="-1"><a class="header-anchor" href="#fiber-纤维"><span>Fiber(纤维)</span></a></h2><ul><li>比线程更细的线，也就是比线程控制的更加细致的并发处理机制；</li><li>一个<code>fiber</code>就是一个<code>虚拟调用帧</code>；</li><li><code>Reconciliation</code>是react的diff算法；</li></ul><h2 id="问题" tabindex="-1"><a class="header-anchor" href="#问题"><span>问题</span></a></h2><ul><li>之前变化更新是同步的，这会导致性能问题；</li><li>组件多了之后，因为同步会带来卡顿；</li></ul><h2 id="更新组件的流程" tabindex="-1"><a class="header-anchor" href="#更新组件的流程"><span>更新组件的流程</span></a></h2><ul><li>生命周期-&gt;计算和对比vdom-&gt;更新dom;(如上面所说，这个过程是同步的)</li></ul><h2 id="解决方案" tabindex="-1"><a class="header-anchor" href="#解决方案"><span>解决方案</span></a></h2><ul><li>将同步分割为多个同步任务，每个同步任务异步来执行；</li><li><code>reconciler</code>来调度，开始，暂停<code>fiber</code>;</li></ul>',8)]))}const s=l(n,[["render",r],["__file","fiber.html.vue"]]),h=JSON.parse('{"path":"/react/fiber.html","title":"","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"Fiber(纤维)","slug":"fiber-纤维","link":"#fiber-纤维","children":[]},{"level":2,"title":"问题","slug":"问题","link":"#问题","children":[]},{"level":2,"title":"更新组件的流程","slug":"更新组件的流程","link":"#更新组件的流程","children":[]},{"level":2,"title":"解决方案","slug":"解决方案","link":"#解决方案","children":[]}],"git":{"updatedTime":1718759308000,"contributors":[{"name":"Boswell","username":"Boswell","email":"mingzhuang.ji@ly.com","commits":1,"url":"https://github.com/Boswell"},{"name":"Boswell","username":"Boswell","email":"aiyoudqrjmz@163.com","commits":3,"url":"https://github.com/Boswell"},{"name":"mingzhuang.ji","username":"mingzhuang.ji","email":"mingzhuang.ji@ly.com","commits":2,"url":"https://github.com/mingzhuang.ji"}]},"filePathRelative":"react/fiber.md"}');export{s as comp,h as data};
