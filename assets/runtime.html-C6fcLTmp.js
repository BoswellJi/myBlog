import{_ as s,c as a,e,o as l}from"./app-XEG1kVcG.js";const i={};function t(p,n){return l(),a("div",null,n[0]||(n[0]=[e(`<h2 id="chunk" tabindex="-1"><a class="header-anchor" href="#chunk"><span>chunk</span></a></h2><ul><li>获取 chunk 的 id;</li><li>获取 chunk 中的模块;</li></ul><h2 id="jsonparray" tabindex="-1"><a class="header-anchor" href="#jsonparray"><span>jsonpArray</span></a></h2><ul><li>数组中的每个元素都是一个 chunk;</li></ul><h2 id="installedchunks" tabindex="-1"><a class="header-anchor" href="#installedchunks"><span>installedChunks</span></a></h2><ul><li>chunk 被加载之后，状态改为 0；</li></ul><h2 id="modules" tabindex="-1"><a class="header-anchor" href="#modules"><span>modules</span></a></h2><ul><li>收集每个 chunk 中的模块；</li></ul><h2 id="deferredmodules" tabindex="-1"><a class="header-anchor" href="#deferredmodules"><span>deferredModules</span></a></h2><ul><li>延迟模块；</li></ul><h2 id="checkdeferredmodules" tabindex="-1"><a class="header-anchor" href="#checkdeferredmodules"><span>checkDeferredModules</span></a></h2><ul><li>开始执行安装好的延迟模块；</li></ul><h2 id="步骤" tabindex="-1"><a class="header-anchor" href="#步骤"><span>步骤</span></a></h2><ul><li>获取 window.webpackJsonp 数组的值；</li><li>保存 jsonpArray 的 push 方法的引用，其中方法的 this 值绑定到 jsonArray;</li><li>给 jsonpArray 添加 push 方法（重写）；</li><li>复制 jsonpArray;</li><li>收集每个 chunk 中的模块；</li><li>将延迟执行模块添加到延迟列表中；</li><li>checkDeferredModules：执行加载好的 chunk;</li></ul><h2 id="组件实例" tabindex="-1"><a class="header-anchor" href="#组件实例"><span>组件实例</span></a></h2><ul><li>new Vue(): Vue</li><li>Vue.extend(): Component</li></ul><h2 id="vue初始化的组件渲染过程" tabindex="-1"><a class="header-anchor" href="#vue初始化的组件渲染过程"><span>vue初始化的组件渲染过程：</span></a></h2><ul><li>app.$mount</li><li>compile(template 编译为 render function)</li><li>render <ul><li>createElement <ul><li>createComponent <ul><li>baseCtor.extend(Ctor)</li><li>installComponentHooks</li><li>实例化 vnode: <ul><li><code>这里会将子组件的构造函数，设置给componentOptions属性</code>；</li></ul></li></ul></li></ul></li></ul></li><li>update <ul><li>patch <ul><li>createEle <ul><li>createComponent <ul><li>init（vnode init hook）</li><li>createComponentInstanceForVnode() <ul><li>new vnode.componentOptions.Ctor(): 通过 vnode 创建组件实例</li></ul></li><li>child.$mount</li></ul></li></ul></li></ul></li></ul></li></ul><h2 id="render-function" tabindex="-1"><a class="header-anchor" href="#render-function"><span>render function</span></a></h2><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">var</span> <span class="token function-variable function">render</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">var</span> _vm <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">var</span> _h <span class="token operator">=</span> _vm<span class="token punctuation">.</span>$createElement<span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">var</span> _c <span class="token operator">=</span> _vm<span class="token punctuation">.</span>_self<span class="token punctuation">.</span>_c <span class="token operator">||</span> _h<span class="token punctuation">;</span> <span class="token comment">// createElement</span></span>
<span class="line">  <span class="token keyword">return</span> <span class="token function">_c</span><span class="token punctuation">(</span></span>
<span class="line">    <span class="token string">&quot;div&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">[</span></span>
<span class="line">      <span class="token function">_c</span><span class="token punctuation">(</span><span class="token string">&quot;test&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">on</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">testClickHandle</span><span class="token operator">:</span> _vm<span class="token punctuation">.</span>appClickhandle <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token function">_c</span><span class="token punctuation">(</span><span class="token string">&quot;async-example&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token number">1</span></span>
<span class="line">  <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,20)]))}const c=s(i,[["render",t],["__file","runtime.html.vue"]]),u=JSON.parse('{"path":"/vue/vue2.x%E7%9F%A5%E8%AF%86%E7%82%B9/runtime.html","title":"","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"chunk","slug":"chunk","link":"#chunk","children":[]},{"level":2,"title":"jsonpArray","slug":"jsonparray","link":"#jsonparray","children":[]},{"level":2,"title":"installedChunks","slug":"installedchunks","link":"#installedchunks","children":[]},{"level":2,"title":"modules","slug":"modules","link":"#modules","children":[]},{"level":2,"title":"deferredModules","slug":"deferredmodules","link":"#deferredmodules","children":[]},{"level":2,"title":"checkDeferredModules","slug":"checkdeferredmodules","link":"#checkdeferredmodules","children":[]},{"level":2,"title":"步骤","slug":"步骤","link":"#步骤","children":[]},{"level":2,"title":"组件实例","slug":"组件实例","link":"#组件实例","children":[]},{"level":2,"title":"vue初始化的组件渲染过程：","slug":"vue初始化的组件渲染过程","link":"#vue初始化的组件渲染过程","children":[]},{"level":2,"title":"render function","slug":"render-function","link":"#render-function","children":[]}],"git":{"updatedTime":1718759308000,"contributors":[{"name":"Boswell","username":"Boswell","email":"mingzhuang.ji@ly.com","commits":2,"url":"https://github.com/Boswell"},{"name":"Boswell","username":"Boswell","email":"aiyoudqrjmz@163.com","commits":3,"url":"https://github.com/Boswell"},{"name":"季明壮","username":"季明壮","email":"mingzhuang.ji@ly.com","commits":1,"url":"https://github.com/季明壮"},{"name":"mingzhuang.ji","username":"mingzhuang.ji","email":"mingzhuang.ji@ly.com","commits":2,"url":"https://github.com/mingzhuang.ji"}]},"filePathRelative":"vue/vue2.x知识点/runtime.md"}');export{c as comp,u as data};
