import{_ as s,c as t,e as o,o as i}from"./app-XEG1kVcG.js";const n={};function a(r,e){return i(),t("div",null,e[0]||(e[0]=[o('<h2 id="句法" tabindex="-1"><a class="header-anchor" href="#句法"><span>句法</span></a></h2><ul><li><p>es代码使用同一码来表达。es源文本时码点序列。所有从U+0000到U+10FFFF值的统一码码点，包括了替代码点,可能出现在es允许的源文本中。被用来存储和交换es源文本的实际的编码与这个规格没有关系。无论是外部源文本编码，一个符合的es实现处理源文本好像他是源字符值的相同序列，每个源字符是一个统一码的码点。符合es的实现不需要任何源文本的规范化或者行为，就好像他门正在执行源文本的规范化。</p></li><li><p>组合字符序列的组件被当作独立的统一码的码点对待，即使用户可能任务整个序列是一个单独字符。</p></li><li><p>注意：在字符串字面量，正则表达式字面量，模板字面量和标识符中，任何统一码码点可能还被使用统一码转义序列来表达，显式表达一个码点的数字值。在注释中，这样的一个转义序列被高效的作为注释的一部分来忽略。es在对于统一码转义序列与java是不同的。在java中，如果统一码转义序列\\u000A，例如，在单个注释行出现，它会被解释作为行终结符，而且，因此下一个码点不是注释的一部分。</p></li></ul><h2 id="静态语义-utf16encodecodepoint" tabindex="-1"><a class="header-anchor" href="#静态语义-utf16encodecodepoint"><span>静态语义:UTF16EncodeCodePoint</span></a></h2><h2 id="ss-codepointstostring" tabindex="-1"><a class="header-anchor" href="#ss-codepointstostring"><span>ss:CodePointsToString</span></a></h2><h2 id="ss-utf16surrogatepairtocodepoint" tabindex="-1"><a class="header-anchor" href="#ss-utf16surrogatepairtocodepoint"><span>ss:UTF16SurrogatePairToCodePoint</span></a></h2><h2 id="ss-codepointat" tabindex="-1"><a class="header-anchor" href="#ss-codepointat"><span>ss:CodePointAt</span></a></h2><h2 id="ss-stringtocodepoints" tabindex="-1"><a class="header-anchor" href="#ss-stringtocodepoints"><span>ss:StringToCodePoints</span></a></h2><h2 id="ss-parsetext" tabindex="-1"><a class="header-anchor" href="#ss-parsetext"><span>ss:ParseText</span></a></h2>',8)]))}const c=s(n,[["render",a],["__file","01源文本.html.vue"]]),d=JSON.parse('{"path":"/books/javascript/ecmascript%E8%A7%84%E6%A0%BC/%E6%BA%90%E4%BB%A3%E7%A0%81/01%E6%BA%90%E6%96%87%E6%9C%AC.html","title":"","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"句法","slug":"句法","link":"#句法","children":[]},{"level":2,"title":"静态语义:UTF16EncodeCodePoint","slug":"静态语义-utf16encodecodepoint","link":"#静态语义-utf16encodecodepoint","children":[]},{"level":2,"title":"ss:CodePointsToString","slug":"ss-codepointstostring","link":"#ss-codepointstostring","children":[]},{"level":2,"title":"ss:UTF16SurrogatePairToCodePoint","slug":"ss-utf16surrogatepairtocodepoint","link":"#ss-utf16surrogatepairtocodepoint","children":[]},{"level":2,"title":"ss:CodePointAt","slug":"ss-codepointat","link":"#ss-codepointat","children":[]},{"level":2,"title":"ss:StringToCodePoints","slug":"ss-stringtocodepoints","link":"#ss-stringtocodepoints","children":[]},{"level":2,"title":"ss:ParseText","slug":"ss-parsetext","link":"#ss-parsetext","children":[]}],"git":{"updatedTime":1735558340000,"contributors":[{"name":"Boswell","username":"Boswell","email":"mingzhuang.ji@ly.com","commits":1,"url":"https://github.com/Boswell"},{"name":"Boswell","username":"Boswell","email":"aiyoudqrjmz@163.com","commits":2,"url":"https://github.com/Boswell"},{"name":"mingzhuang.ji","username":"mingzhuang.ji","email":"mingzhuang.ji@ly.com","commits":2,"url":"https://github.com/mingzhuang.ji"}]},"filePathRelative":"books/javascript/ecmascript规格/源代码/01源文本.md"}');export{c as comp,d as data};
