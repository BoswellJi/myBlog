import{_ as e,c as i,e as a,o as n}from"./app-XEG1kVcG.js";const s={};function t(c,l){return n(),i("div",null,l[0]||(l[0]=[a('<h2 id="概述" tabindex="-1"><a class="header-anchor" href="#概述"><span>概述</span></a></h2><ul><li><p>js只能采用 <code>运算过程中窒息感某种类型转换规则</code> ，解决不同类型间的运算问题；</p></li><li><p>因为解释器不知道源代码是什么类型的变量，也就无法检查；</p></li><li><p>所以只能在代码执行过程中才能获知；</p></li><li><p>类型转换规则；</p></li><li><p>这些类型转换规则，是js类型系统设计的基础；</p></li></ul><h2 id="宿主环境下的特殊类型系统" tabindex="-1"><a class="header-anchor" href="#宿主环境下的特殊类型系统"><span>宿主环境下的特殊类型系统</span></a></h2><h2 id="值运算-类型转换的基础" tabindex="-1"><a class="header-anchor" href="#值运算-类型转换的基础"><span>值运算：类型转换的基础</span></a></h2><ul><li><p>js的对象系统衍生自元类型object</p></li><li><p>函数式语言特性则基于元类型function</p></li><li><p>运算的实质，是值运算；</p></li><li><p>引用类型的价值</p><ul><li>标识一组值数据</li><li>提供一组存取值数据的规则</li><li>在函数中传递与存储引用（标识</li></ul></li><li><p>所以问题简化为，所谓的类型转换是指：</p><ul><li><code>指类型之间的转换</code></li><li><code>将引用类型转换为值类型</code> （以参与运算</li></ul></li></ul><h2 id="隐式转换" tabindex="-1"><a class="header-anchor" href="#隐式转换"><span>隐式转换</span></a></h2><ul><li><p>通过函数或方法调用，明确将类型转换为另一种类型的称为显示转换；</p></li><li><p>js引擎根据代码的上下文推断所需要的数据类型，并完成<code>数据转换</code>和<code>值运算</code>的过程</p><ul><li>发生场景 <ul><li>表达式运算</li><li>某些语句对数据的强制理解</li></ul></li></ul></li><li><p>运算导致的类型转换</p></li><li><p>语句（语义）导致的类型转换</p></li></ul><h2 id="值类型之间的转换" tabindex="-1"><a class="header-anchor" href="#值类型之间的转换"><span>值类型之间的转换</span></a></h2><h2 id="从引用到值-深入探究valueof-方法" tabindex="-1"><a class="header-anchor" href="#从引用到值-深入探究valueof-方法"><span>从引用到值：深入探究valueOf()方法</span></a></h2><h2 id="到字符串类型的显示转换" tabindex="-1"><a class="header-anchor" href="#到字符串类型的显示转换"><span>到字符串类型的显示转换</span></a></h2>',10)]))}const r=e(s,[["render",t],["__file","5.7类型转换.html.vue"]]),h=JSON.parse('{"path":"/books/javascript/javascript%E8%AF%AD%E8%A8%80%E7%B2%BE%E9%AB%93%E4%B8%8E%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%E5%AE%9E%E8%B7%B5/5javascript%E5%8A%A8%E6%80%81%E8%AF%AD%E8%A8%80%E7%89%B9%E6%80%A7/5.7%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2.html","title":"","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"概述","slug":"概述","link":"#概述","children":[]},{"level":2,"title":"宿主环境下的特殊类型系统","slug":"宿主环境下的特殊类型系统","link":"#宿主环境下的特殊类型系统","children":[]},{"level":2,"title":"值运算：类型转换的基础","slug":"值运算-类型转换的基础","link":"#值运算-类型转换的基础","children":[]},{"level":2,"title":"隐式转换","slug":"隐式转换","link":"#隐式转换","children":[]},{"level":2,"title":"值类型之间的转换","slug":"值类型之间的转换","link":"#值类型之间的转换","children":[]},{"level":2,"title":"从引用到值：深入探究valueOf()方法","slug":"从引用到值-深入探究valueof-方法","link":"#从引用到值-深入探究valueof-方法","children":[]},{"level":2,"title":"到字符串类型的显示转换","slug":"到字符串类型的显示转换","link":"#到字符串类型的显示转换","children":[]}],"git":{"updatedTime":1735558340000,"contributors":[{"name":"j哥哥","username":"j哥哥","email":"aiyoudqrjmz@163.com","commits":1,"url":"https://github.com/j哥哥"},{"name":"jmz","username":"jmz","email":"mingzhuang.ji@ly.com","commits":10,"url":"https://github.com/jmz"},{"name":"Boswell","username":"Boswell","email":"mingzhuang.ji@ly.com","commits":2,"url":"https://github.com/Boswell"},{"name":"Boswell","username":"Boswell","email":"aiyoudqrjmz@163.com","commits":2,"url":"https://github.com/Boswell"},{"name":"mingzhuang.ji","username":"mingzhuang.ji","email":"mingzhuang.ji@ly.com","commits":2,"url":"https://github.com/mingzhuang.ji"}]},"filePathRelative":"books/javascript/javascript语言精髓与编程语言实践/5javascript动态语言特性/5.7类型转换.md"}');export{r as comp,h as data};
